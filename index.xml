<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>纯真年代</title>
    <link>https://pureage.info/</link>
    <description>Recent content on 纯真年代</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 27 May 2019 18:27:06 +0800</lastBuildDate>
    
        <atom:link href="https://pureage.info/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>一些个人常用的工具</title>
      <link>https://pureage.info/tools/</link>
      <pubDate>Mon, 27 May 2019 18:27:06 +0800</pubDate>
      
      <guid>https://pureage.info/tools/</guid>
      
        <description>&lt;p&gt;这个页面仅仅用来记录我个人常用的一些网页版的工具，对您来说，多半无意义。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://passwd.pureage.info&#34;&gt;个人密码生成器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tune.pureage.info&#34;&gt;简谱转调器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>《非暴力沟通》读书笔记</title>
      <link>https://pureage.info/post/nonviolent-communication/</link>
      <pubDate>Thu, 09 May 2019 10:43:17 +0800</pubDate>
      
      <guid>https://pureage.info/post/nonviolent-communication/</guid>
      
        <description>&lt;p&gt;这几天空闲的时候读完了马歇尔·卢森堡的《非暴力沟通》，觉得它确实是一本好书，在现实生活中指导意义很强。&lt;/p&gt;

&lt;p&gt;如果没有看过这本书，仅看内容简介大概会把它归为“心灵鸡汤”一类的书。但实际上这是一本可以用来指导具体实践的教程，作者不厌其烦甚至有些啰嗦的举了大量的例子来说明非暴力沟通的具体实践。&lt;/p&gt;

&lt;p&gt;非暴力沟通解决什么问题？&lt;/p&gt;

&lt;p&gt;在我看来人类的语言表达、理解机制的缺陷必然会导致沟通不畅进而引发不同程度的“暴力”行为。非暴力沟通就是用来解决这个问题的。&lt;/p&gt;

&lt;p&gt;当然，就像爱不能用来发电一样，在人类历史上，仇恨、暴力等必然有它们的意义。我们只专注于我们希望进行非暴力沟通的场景。比如，家庭成员之间、同事、朋友之间。&lt;/p&gt;

&lt;p&gt;非暴力沟通的意义是什么？&lt;/p&gt;

&lt;p&gt;作者在书中的一段话可以说明它的意义：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;虽然我称非暴力沟通为“沟通方式”，但它不只是沟通方式。它更是一种持续不断的提醒，使我们专注于更可能满足我们人生追求的方向。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;怎样执行非暴力沟通？&lt;/p&gt;

&lt;p&gt;非暴力沟通有四个要素：观察、感受、需要和请求。这是书中的说法，但不知是翻译的问题，还是作者写作的时候图个简单朗朗上口，我认为仅用这四个词是不够的。这四个词汇前面必须加上“表达”才将非暴力沟通的执行要素表达的更清楚。即：观察并表达观察结果、表达感受、表达需要、表达请求。&lt;/p&gt;

&lt;p&gt;非暴力沟通的第一个要素是观察。我们仔细观察正在发生的事情，并清楚地说出观察结果。非暴力沟通并不要求我们保持完全的客观而不作任何评论。它只是强调区分观察和评论的重要性。将观察和评论混为一谈，人们将倾向于听到批评，甚至会产生逆反心理。&lt;/p&gt;

&lt;p&gt;非暴力沟通的第二个要素是表达感受。通过建立表达感受的词汇表，我们可以更清楚地表达感受，从而使沟通更为顺畅。在表达感受时，示弱有助于解决冲突。此外，非暴力沟通还对表达具体感受的词语与陈述想法、评论以及观点的词语作了区分。&lt;/p&gt;

&lt;p&gt;非暴力沟通的第三个要素是表达需要。对他人的指责、批评、评论以及分析反映了我们的需要和价值观。如果我们通过批评来提出主张，人们的反应常常是申辩或反击。反之，如果直接说出我们的需要，其他人就较有可能作出积极的回应。&lt;/p&gt;

&lt;p&gt;非暴力沟通的第四个要素是请求。我们告诉人们，为了改善生活，我们希望他们做什么。我们避免使用抽象的语言，而借助具体的描述，来提出请求。&lt;/p&gt;

&lt;p&gt;非暴力沟通的使用，是单边可行的，即并不需要沟通的对象也熟悉非暴力沟通。上述四个要素及包括对自己、也包括对他人。对自己很好理解，对他人就是倾听，了解他人的观察、感受、需要和请求。&lt;/p&gt;

&lt;p&gt;在我看来，非暴力沟通的实质其实是聚焦。聚焦自己和对方的真实需求，一切以真实需求为中心，为其服务，从自己的主观情绪中跳出来。&lt;/p&gt;

&lt;p&gt;道理和方法这本书是讲清楚了，执行的事就只能是交给读者自己了。至少我相信，正确的执行非暴力沟通，夫妻间的不愉快将会大大减少。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>混迹技术聊天群容易产生的几个错觉</title>
      <link>https://pureage.info/post/illusions-produced-in-im-groups-of-software-technology/</link>
      <pubDate>Sun, 07 Apr 2019 17:51:22 +0800</pubDate>
      
      <guid>https://pureage.info/post/illusions-produced-in-im-groups-of-software-technology/</guid>
      
        <description>&lt;p&gt;现如今，各行各业都有无数的聊天群，软件技术相关当然也不例外。一个程序员不混几个技术群，每天在里面聊聊技术吹吹水，都似乎有点非主流了。&lt;/p&gt;

&lt;p&gt;我这里说的是那种技术氛围相对浓厚一点的聊天群，大家主要的聊天内容还是会跟某些具体技术相关。纯水群不在本文讨论范围之列。&lt;/p&gt;

&lt;p&gt;经过我长期观察，混迹技术聊天群容易产生几个错觉，甚至可以称之为幻觉。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;错觉一：真正的大牛们貌似都很会喷人，所以我也要会喷。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;这种错觉的表现，就是某些群友们从来不会好好说话，言必称A语言垃圾，B框架狗屎，C项目巨烂无比。&lt;/p&gt;

&lt;p&gt;是的，很多业界大牛是比较有个性，经常会看到一些态度激烈的言论。但是你首先要搞清楚，个性每个人都有，但大牛是要肚里有货的，甚至光肚里有货都不够，还要有项目能流传出来供大家使用、讨论、评判。肚里没啥干货，嘴里粪喷成花也改变不了你菜鸟的本质。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;错觉二：指出经典开源项目的毛病，我就看上去更牛逼了。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;这一部分人其实跟上一波人有很大的重合，他们缺乏对历史上那些经典开源软件的敬畏之心。&lt;/p&gt;

&lt;p&gt;比如，有人会因为使用的一些开源项目在某些情况下会coredump，就怒而逢此项目必喷。你要问他们是怎么解决这些问题的，有没有给官方报issues，有没有自己提交pull request解决这些问题，答案多半是没有。&lt;/p&gt;

&lt;p&gt;事实上，任何一个开源项目都必然会有bug存在，在使用开源项目时，遇到问题就尝试去反馈问题，解决问题，是使用开源项目的基本素养。&lt;/p&gt;

&lt;p&gt;几十年前，就有一位美国伟人说过：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;My fellow programmers ask not what open source can do for you, ask what you can do for open source.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当然这是我篡改过的版本：）&lt;/p&gt;

&lt;p&gt;&lt;em&gt;错觉三：站在巨人的肩膀上，我自己也是巨人了。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;软件开发/程序设计发展到今天，有无数的先驱在前面铺路搭桥，以至于今天我们不用造轮子，直接完全使用开源项目都能完成很多任务。&lt;/p&gt;

&lt;p&gt;站在巨人的肩膀上，能让我们看的更远，但并不意味着我们自己也是巨人了。自己真正的代码能力怎么样，自己心里有点数啊大兄弟。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>将域名转到Namesilo</title>
      <link>https://pureage.info/post/transfer-domain-from-godaddy-to-namesilo/</link>
      <pubDate>Mon, 25 Mar 2019 10:45:26 +0800</pubDate>
      
      <guid>https://pureage.info/post/transfer-domain-from-godaddy-to-namesilo/</guid>
      
        <description>&lt;p&gt;本网站所使用的域名pureage.info自2011年注册开始，一直托管在godaddy上。当年国外的域名注册商家中，只有godaddy支持支付宝。我是一个怕麻烦的人，所以虽然这么多年续费费用越来越高，我也一直没有想过将域名转出到其它商家托管。&lt;/p&gt;

&lt;p&gt;直到最近，域名又要续费了，而这个info的域名现在居然到了150元人民币一年，干脆趁这个机会转出到namesilo了。整个过程用了不到五分钟，namesilo一年的费用是80多块，还借机体验了一下域名转出的流程，真是何乐而不为呢。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Golang中令人不那么愉悦的import</title>
      <link>https://pureage.info/post/annoying-golang-import/</link>
      <pubDate>Mon, 18 Mar 2019 14:49:45 +0800</pubDate>
      
      <guid>https://pureage.info/post/annoying-golang-import/</guid>
      
        <description>&lt;p&gt;众所周知，在github上参与开源项目的一般流程如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;将开源项目fork到自己的名下。&lt;/li&gt;
&lt;li&gt;在本地开发环境中clone自己在上一步中fork的项目。&lt;/li&gt;
&lt;li&gt;本地完成开发测试和代码提交，再push到自己名下的仓库中。&lt;/li&gt;
&lt;li&gt;从自己名下的这个项目中，对原始项目发起一个pull request。&lt;/li&gt;
&lt;li&gt;发起的pull request被上游merge后，自己的代码就进入开源项目中了。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;虽然具体workflow的细节上可能有些差异，但总体流程大概就是这样。&lt;/p&gt;

&lt;p&gt;但是在参与Golang的开源项目中，由于gopath的限制，这个流程就会有问题。举个例子，有一个项目为github.com/userA/project，fork之后，有一个新的仓库，路径为github.com/userB/project。而这个project中大概率会有内部package引用，比如在main.go中，import了github.com/userA/project/moduleA，这样在go get自己的仓库时，仍然会引用到原始的仓库路径。将会导致诸如构建失败等一些问题。&lt;/p&gt;

&lt;p&gt;为什么基于c/c++的开源项目就没有这个问题呢，因为c/c++的构建更原始更简单。include只有两种形式，要么是在标准路径中或项目子目录中去查找，要么在非标准路径下，但能通过编译器的选项来告诉编译器去哪里找，而代码本身则是非常干净的，不会有硬编码的特定路径在源码里面。而Golang的import，是一个完整的url，这样可以让go get之类的工具自动化的进行一些操作。&lt;/p&gt;

&lt;p&gt;上面可以解释Golang项目在引用外部包的时候使用完整url的做法，但是在引用项目内部包时，仍然使用完整url的做法就多少让人觉得有点不能理解。如果import能支持相对路径，就不会有前面提到的问题了。Golang的开发者们当然对这个问题有自己的考虑，参考这个issue：&lt;a href=&#34;https://github.com/golang/go/issues/3515&#34;&gt;https://github.com/golang/go/issues/3515&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;不能简单的说Golang的这种构建方式不对，因为它的出现必然是有自己的优点和解决了一些问题的，所以从实用的角度出发，我们只能将其称之为“特点”，并去适应它。&lt;/p&gt;

&lt;p&gt;解决办法有几个，但都看上去有些丑陋。比如：&lt;/p&gt;

&lt;p&gt;在本地开发的时候，使用的路径仍然是原始项目的路径，将自己名下的仓库作为一个remote upstream，push的时候将修改push到自己名下的仓库中，然后再向原始仓库提交pull request。&lt;/p&gt;

&lt;p&gt;对于一般的开源项目，这种“临时”的方法就够用了。但在下面的几个场景种，这种方法显然会很令人不适：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;原始项目已经不维护了，你想自己长期维护一个fork。&lt;/li&gt;
&lt;li&gt;原始项目仍然在积极维护，但是你仍然想自己长期维护一个fork。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;在上述情况下，其实我们是把原始项目和自己的fork当作两个相对独立的项目，我们希望在构建的时候能直接go build就行了，不希望有其他额外的操作。如果有第三个人，他想fork我们这个fork并进行并列开发，按上面的方法将会非常麻烦。&lt;/p&gt;

&lt;p&gt;对于这种情况，我选择将项目内所有源码中的import路径，修改为我自己名下的路径。虽然这种做法很丑陋，也是不得已而为之了。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>徒手攀岩</title>
      <link>https://pureage.info/post/free-solo/</link>
      <pubDate>Tue, 12 Mar 2019 14:09:22 +0800</pubDate>
      
      <guid>https://pureage.info/post/free-solo/</guid>
      
        <description>&lt;p&gt;从小到大做过不少不少恶梦，一个反复出现的场景是我被困在一面绝壁之上，进退维谷。最后通常有两个结局，一是始终在高压的状态下度过这个梦境，有可能会被吓醒；另一个是突然意识到自己正在做梦，然后抛开一切恐惧，纵身一跃，飞翔于天地间。&lt;/p&gt;

&lt;p&gt;以后我才知道，原来有一项叫徒手攀岩的极限运动，我在那些恶梦中所处的场景，是这项运动的爱好者们的日常。不同的是，这不是梦。一个闪失，他们就会粉身碎骨，成为不断增长的死亡列表里的一个新的名字。&lt;/p&gt;

&lt;p&gt;纪录片《徒手攀岩》，就讲述了Alex Honnold在无保护措施下成功攀登酋长岩的经过。&lt;/p&gt;

&lt;p&gt;当我们在看一部极限运动的纪录片时，我们看的是什么？对于我自己，是在试图了解这个人，他的动机，他的情感。我觉得当一个人醉心于一种一不留神就会让自己丧命的运动中时，他一定是接近甚至超越一个哲学家的存在。Alex Honnold确实也是这样，对生死、亲情、友情、爱情都有着自己深刻的理解。&lt;/p&gt;

&lt;p&gt;英国探险家乔治·马洛里在被问及为何想要攀登珠穆朗玛峰时回答，“因为它就在那儿“，成为人们至今仍经常引用的名言。这句话可以用来回答许多极限运动领域中类似的问题。但是现在，对于极限运动的评论往往变成了”这就是为什么外国人这么少“之类的调侃。&lt;/p&gt;

&lt;p&gt;我当然不会死板到因为这些评论的盛行就感慨世风不古，在跟朋友们一起看这些视频时，我也会做出此类调侃。但是静下心来细想，一定会是满满的敬意。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>洛奇6中的一段台词</title>
      <link>https://pureage.info/post/a-line-in-rocky6/</link>
      <pubDate>Wed, 09 Jan 2019 18:27:11 +0800</pubDate>
      
      <guid>https://pureage.info/post/a-line-in-rocky6/</guid>
      
        <description>&lt;p&gt;你绝对不会相信，但你以前才这么大，我会把你举高跟你妈说，“他将是世界上最棒的小孩，这孩子绝对超乎想象的优秀”。你长大以后真的很棒，每天看着你就是一种特权了。&lt;/p&gt;

&lt;p&gt;后来你成年就独立了，踏入社会，表现得很好。但不知道什么时候，你变了，不再是原本的你。你让人用手指着你的脸，骂你没用。遇到困难就开始怪罪别人，好像活在阴影下似的。&lt;/p&gt;

&lt;p&gt;跟你说一件你已经知道的事。人生未必都是美好的，世间险恶又无情。不管你有多坚强，你一松懈，就会被逼的屈膝臣服。谁打你，都不会比人生的打击更重。但重点不是你出手多重，而是你能忍耐多少，继续向前迈进。你能承受多少还能向前迈进！这样才能赢啊！&lt;/p&gt;

&lt;p&gt;知道自己的斤两就极力去争取吧，但你要愿意承受打击，不要用手指着别人，说你失败是因为他或她或是任何人。懦夫才会这样，你不是懦夫，你很坚强。&lt;/p&gt;

&lt;p&gt;我会永远爱你，不管发生什么事，你是我的儿子，我的骨肉，是我这辈子最珍贵的礼物。但在你建立自信以前，你都不会有自己的人生。别忘了去看你妈。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You ain&amp;rsquo;t gonna believe this, but you used to fit right here. I&amp;rsquo;d hold you up to say to your mother, &amp;ldquo;this kid&amp;rsquo;s gonna be the best kid in the world. This kid&amp;rsquo;s gonna be somebody better than anybody I ever knew.&amp;rdquo; And you grew up good and wonderful. It was great just watching you, every day was like a privilige.&lt;br /&gt;
Then the time come for you to be your own man and take on the world, and you did. But somewhere along the line, you changed. You stopped being you. You let people stick a finger in your face and tell you you&amp;rsquo;re no good. And when things got hard, you started looking for something to blame, like a big shadow.&lt;br /&gt;
Let me tell you something you already know. The world ain&amp;rsquo;t all sunshine and rainbows. It&amp;rsquo;s a very mean and nasty place and I don&amp;rsquo;t care how tough you are it will beat you to your knees and keep you there permanently if you let it. You, me, or nobody is gonna hit as hard as life. But it ain&amp;rsquo;t about how hard ya hit. It&amp;rsquo;s about how hard you can get it and keep moving forward. How much you can take and keep moving forward. That&amp;rsquo;s how winning is done!&lt;br /&gt;
Now if you know what you&amp;rsquo;re worth then go out and get what you&amp;rsquo;re worth. But ya gotta be willing to take the hits, and not pointing fingers saying you ain&amp;rsquo;t where you wanna be because of him, or her, or anybody! Cowards do that and that ain&amp;rsquo;t you! You&amp;rsquo;re better than that!&lt;br /&gt;
I&amp;rsquo;m always gonna love you no matter what. No matter what happens. You&amp;rsquo;re my son and you&amp;rsquo;re my blood. You&amp;rsquo;re the best thing in my life. But until you start believing in yourself, ya ain&amp;rsquo;t gonna have a life. Don&amp;rsquo;t forget to visit your mother.&lt;/p&gt;
&lt;/blockquote&gt;</description>
      
    </item>
    
    <item>
      <title>奎迪：英雄再起</title>
      <link>https://pureage.info/post/creed2/</link>
      <pubDate>Fri, 04 Jan 2019 15:02:29 +0800</pubDate>
      
      <guid>https://pureage.info/post/creed2/</guid>
      
        <description>&lt;p&gt;作为洛奇系列电影的旁支，《奎迪》系列的第二部最近在国内院线上映了。作为一个拳击题材电影的影迷和现实生活中的拳迷，虽然不久前我已经在网上找到视频资源先睹为快了，在上映后仍去电影院重温了一下。&lt;/p&gt;

&lt;p&gt;总的来说，我对这部电影很满意。与上一部相比，加入了更多拳击之外的感情戏，导致中间会有一些沉闷，应该会引起一些争议。但拳击电影从来都不是从头到尾在擂台上拳拳到肉，如果缺了感情的铺垫，情绪没有累积上来，最后的决战就无法成为高潮。&lt;/p&gt;

&lt;p&gt;说一说这个电影除了主角奎迪的成长之外，有意思的两个地方。&lt;/p&gt;

&lt;h3 id=&#34;小德拉戈-傅红雪&#34;&gt;小德拉戈/傅红雪&lt;/h3&gt;

&lt;p&gt;老德拉戈当年在擂台上打死了奎迪的父亲阿波罗，在当时的冷战背景下，在苏联国内荣誉达到顶峰，但随后在与洛奇的比赛中败北，被国家、被妻子抛弃，又失去一切。只有小德拉戈是他唯一的希望。&lt;/p&gt;

&lt;p&gt;所以小德拉戈是一个在仇恨中长大的孩子。他要用拳头把父亲丢失的东西再赢回来。&lt;/p&gt;

&lt;p&gt;是不是很像《边城浪子》里的傅红雪？&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;风在呼啸。&lt;br /&gt;
她看着他慢慢地走出去，走入黑暗的夜色中，他的人似已渐渐与黑暗溶为一体。&lt;br /&gt;
他手里的刀，似也渐渐与黑暗溶为一体。&lt;br /&gt;
这时黑暗已笼罩大地。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;但他还毕竟比傅红雪幸运的多。最后当父亲蹒跚着扔出表示认输的白手帕时，他可能才发现，从小到大一直用仇恨激励他的父亲，对他极其严厉的父亲，其实内心是深爱着他的，他并不仅仅是一个用来复仇的工具。那一刻，在拳台上他在父亲面前哭的像个孩子。&lt;/p&gt;

&lt;p&gt;影片结尾，不光是属于洛奇和奎迪的，也是属于他们父子的。当老德拉戈和小德拉戈在清晨的街道中并肩跑步训练时，他们彼此一定获得了全新的力量。&lt;/p&gt;

&lt;h3 id=&#34;赛前紧张的奎迪&#34;&gt;赛前紧张的奎迪&lt;/h3&gt;

&lt;p&gt;在上一部中，奎迪在一次比赛前，紧张的脱掉拳套去上厕所。在这一部中，妻子会在登台前对其比一个手势，那意思是问他大便了吗？这一部奎迪主要有三场比赛，第一场和最后一场，妻子赛前做了这个手势，奎迪赢得了比赛。第二场，也就是和小德拉戈的第一场比赛，妻子没有这个动作，奎迪输了比赛。有没有这个手势，是表示他们之间是否是处于全力彼此支持的状态。&lt;/p&gt;

&lt;p&gt;在与小德拉戈的第一场，一意孤行的奎迪，登台前紧张到发抖。在复赛中，取得爱人和洛奇支持的奎迪就沉稳的多。&lt;/p&gt;

&lt;p&gt;仅仅是因为，他有没有明白自己是为何而战。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>如何在考研数学中得到148分</title>
      <link>https://pureage.info/post/how-i-got-148-marks-for-math-in-national-entrance-examination-for-postgraduate/</link>
      <pubDate>Wed, 02 Jan 2019 14:24:49 +0800</pubDate>
      
      <guid>https://pureage.info/post/how-i-got-148-marks-for-math-in-national-entrance-examination-for-postgraduate/</guid>
      
        <description>&lt;p&gt;本来不想取这个标题，因为它第一眼看上去有一种炫耀的情绪在里面。甚至连这篇文章都犹豫了很久要不要写，犹豫的原因无外乎读者可能会有下面几种看法：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;作为一个工作多年的人，还对考研成绩念念不忘，是不是说明考研之后的人生太失败？&lt;/li&gt;
&lt;li&gt;这种文章写出来会不会像现在满大街的鸡汤文一样，都是正确的废话？&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;为什么又决定还是写下这篇文章呢？&lt;/p&gt;

&lt;p&gt;首先是我想写一系列回忆过去的文章，从中思考“我是怎么成为现在的我”这个哲学命题，考研虽然只是一件小事，但仍有值得记住和总结的地方。其次，考研一结束，这个事情就被我抛在脑后，几乎忘掉，近年来各种关于“认知”、“精进”、“学习”的自媒体非常火爆，但是读了这些看上去非常高大上的文章之后，我才发现其实我在考研中其实就用到了很多相关的方法，只是当时并不自知，因此也值得回忆和总结一下。&lt;/p&gt;

&lt;p&gt;那么言归正传，我就来回忆一下考研这个事情。&lt;/p&gt;

&lt;p&gt;那是近10年前的事情了。当时我在哈尔滨工程大学电子信息工程专业，像主流准备考研的同学一样，我在大三下学期开始着手准备，目标定为电子科技大学的电路与系统专业。考试科目是数学、英语、政治和专业课四门。最终成绩是409分，其中数学148分，英语72分，而政治和专业课多少分已经完全不记得了。无论是总分，还是单科分数，这都是一个非常理想的成绩，而且没有参加任何考研辅导班。&lt;/p&gt;

&lt;p&gt;这些科目中，数学自然是重中之重，而我的数学基础并不好。当年湖北的高考数学卷，总分150我只得了90多分，刚刚及格。也许你会说，一次考试成绩差说明不了你数学真的差。但我自己确信，我的数学是真的差。一方面，我不是那种很聪明的人，另一方面，我还很马虎，简单的算术在打草稿时也会算错。&lt;/p&gt;

&lt;p&gt;所以在当时，我面临的问题是，如何能在半年时间尽可能的提高数学成绩。&lt;/p&gt;

&lt;p&gt;前面说了这么多，其实方法特别简单。既然我接受了自己数学底子差、自己又并不聪明这个设定，那么就重点补基础吧。数学的重中之重是高等数学，我的主要备考资料是同济第五版的高数课本。课本中所有定理的推导过程要完全掌握，都能自行推导出来。不刷任何辅导题集，只做课后习题保持练习的状态。课后习题一般是很简单的，但是不管多简单，都要力求一次性计算正确，这个是为了克服粗心大意的问题。每一道题做完后，要再想一想涉及到的知识点、定理的推导。&lt;/p&gt;

&lt;p&gt;整个过程按部就班，非常轻松。上面就是我在考研数学中得到148分的所有诀窍，看起来很简单是不是。&lt;/p&gt;

&lt;p&gt;不简单的是，如何坚定执行这个方法。要知道，身边所有备考的人每天都在刷各种真题或者模拟题，我没有看到一个像我这样只是天天看课本的。我不知道自己的方法是不是对的，前人的备考经验里也没有这样的成功案例，所以我必然会怀疑自己。&lt;/p&gt;

&lt;p&gt;当时考研的同学会经常上一个考研论坛(bbs.kaoyan.com)交流，我刚惊喜的发现，这个论坛还在。我在里面找到了自己备考前发的一个帖子，内容如下：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;数学这么学有用吗？&lt;br /&gt;
我打算把课本上所有的定理及定义集中抄下来，将其证明过程集中完全搞懂，但应该会花费很多时间，大家怎么看啊？给点建议吧。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;帖子并不火爆，但也有一些回答，比如：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;没必要，熟练应用需要的是练习，纯背诵效果意义都不大。而且市面上各种总结的数学手册肯定比你详细准确多了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;再比如：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;你证明定理定义对考试又什么用处&amp;hellip;&amp;hellip;&lt;br /&gt;
难道你考的是数学系？如果不是，那一点用都没有&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;又比如：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;学了十几年的数学,你还没入门&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;大多是这样的回复，要么是理解错了我的意思，要么是对这种方法持否定态度。所以，在网上寻找志同道合者以解决自我怀疑这条路没走通。这个时候就要靠一种发自内心的野蛮力量了，相信自己做的是正确的。其中有一个事情起了很大的辅助作用，那就是每天坚持跑步，它让我每天保持充沛的精力，平静的心态。&lt;/p&gt;

&lt;p&gt;好了，回忆完毕。&lt;/p&gt;

&lt;p&gt;仔细缕一缕整个过程，能总结出几个有价值的点：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;方法论很重要。&lt;/li&gt;
&lt;li&gt;方法论要坚持执行才有意义。&lt;/li&gt;
&lt;li&gt;方法论不唯一。即使是数学考试这么个目标极其明确的事情，每个人都有自己的方法论。&lt;/li&gt;
&lt;li&gt;选择了一个方法论，就要相信它。&lt;/li&gt;
&lt;/ol&gt;</description>
      
    </item>
    
    <item>
      <title>用手机发布静态博客</title>
      <link>https://pureage.info/post/write-a-blog-with-a-cellphone/</link>
      <pubDate>Fri, 23 Nov 2018 22:15:21 +0800</pubDate>
      
      <guid>https://pureage.info/post/write-a-blog-with-a-cellphone/</guid>
      
        <description>&lt;p&gt;这篇文章没有什么实际内容，请谨慎点开，不要浪费自己的时间。我就是想测试一下在手机上写一篇博客的感觉如何，能否达到以前使用动态博客程序时的体验。&lt;/p&gt;

&lt;p&gt;绝大部分时候，我不会在手机上发布一篇文章，主要原因是：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;没有非得在手机上发文的紧迫性。&lt;/li&gt;
&lt;li&gt;在电脑前静下心来写一篇文章也能强迫自己安心整理思路、查阅资料，写出来的文章会更全面。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;但是也并不能完全排除这个可能，尤其是一些非知识性的心情随笔，可能思绪飘过，不抓住就飘远了，事后往往找不到当时的感觉。比如，2012年夏天我刚从成都到深圳工作时，住处的网络还没安装好，有几篇文章是我特意跑到网吧去写的，就是为了赶紧给当时的状态留下个痕迹。&lt;/p&gt;

&lt;p&gt;本次测试表明，Hugo+Caddy配合起来非常棒，完全能胜任在手机端写作和发布的工作。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>静态博客的黄金搭档:Caddy和Hugo</title>
      <link>https://pureage.info/post/caddy-and-hugo/</link>
      <pubDate>Wed, 21 Nov 2018 01:09:59 +0800</pubDate>
      
      <guid>https://pureage.info/post/caddy-and-hugo/</guid>
      
        <description>&lt;p&gt;几年前，在以Hexo、jekyll为代表的各种静态博客生成系统百花齐放的时候，我写过一篇&lt;a href=&#34;http://pureage.info/2015/12/16/still-using-typecho.html&#34;&gt;继续留在Typecho&lt;/a&gt;。并不是因为我非常守旧，而是经过实际使用测试之后，我认为不管这些静态生成器宣传的多么天花乱坠，它们实际上就是很难用，体现在安装、发布的各个方面。而它们的那些优点并不能让我忽略这些缺点。&lt;/p&gt;

&lt;p&gt;直到我遇到了Hugo。&lt;/p&gt;

&lt;p&gt;在去年下半年发现了Hugo后，我毫不犹豫的写了个脚本将之前所有的文章全部迁移了过来。仅凭它的无依赖和执行速度，就甩开它的那些前辈们好几个身位。&lt;/p&gt;

&lt;p&gt;至于Web Server，我一直是Openresty的死忠，对它是在是太熟悉了，所以理所当然这个博客也是用Openresty来提供服务。对Openresty/Nginx的深入了解，让我有一种踏实感和掌控感，哪怕对于一个静态站点来说，开启https和http2几乎是仅有的配置了。&lt;/p&gt;

&lt;p&gt;直到我遇到了Caddy。&lt;/p&gt;

&lt;p&gt;在了解和测试了caddy后，同样我立刻将Web Server由Openresty换成了Caddy。两三行配置就支持https和http2,支持证书的自动更新，再加上说得过去的性能，让人无法拒绝。&lt;/p&gt;

&lt;p&gt;至此，这个博客的技术方案就是Hugo+Caddy。&lt;/p&gt;

&lt;p&gt;将它们分开来说，Hugo是当前最优秀的静态网站生成器，Caddy是配置最简单的Web Server，而又都天生具有Golang程序容易部署的优点，凑在一起就就是个人博客系统的黄金搭档。&lt;/p&gt;

&lt;p&gt;另外，Caddy还有与hugo适配的插件http.hugo，使用这个插件后，可以有跟动态网站相同的文章发布体验。&lt;/p&gt;

&lt;p&gt;还有比这更完美的事情吗？&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>golang modules对git版本的依赖</title>
      <link>https://pureage.info/post/bad-feeling-about-go-cmd/</link>
      <pubDate>Fri, 16 Nov 2018 23:00:44 +0800</pubDate>
      
      <guid>https://pureage.info/post/bad-feeling-about-go-cmd/</guid>
      
        <description>&lt;p&gt;这些年来，由于golang缺少依赖管理，社区涌现了五花八门的依赖管理方案，比如glide、govendor、godep等。而golang 自1.11起，内置了modules方案，总算是来了个一锤定音。&lt;/p&gt;

&lt;p&gt;go modules方案的设计是非常好的，网上介绍go modules机制的文章很多，我这里也不再赘述。工作中写的一些golang项目，我都已经用上了该方案来做依赖管理。之所以这么快的拥抱新方案，是认为有google的背景，即使是新鲜出炉的功能，稳定性应该是有保证的，即使有坑，趟趟也就过去了。&lt;/p&gt;

&lt;p&gt;但是在这个过程中，发现的一些问题让我对google软件工程质量的信心大打折扣。&lt;/p&gt;

&lt;p&gt;举个例子，如果你的开发环境是centos6.5, git版本是比较旧的v1.7.1，这个时候使用go modules是会有问题的(不要问我为什么要在centos6.5上面编译golang程序，因为我个人习惯将开发环境保持与线上环境一致)。在go get或者go build会报一些五花八门的错误，比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;build xxxx: cannot find module for path yyy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;unknown revision xxxx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;具体是哪一种错误，取决于不同的执行时机，比如你是对一个之前没有用过go modules的项目从头执行了&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;go mod init xxxx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;做初始化之后再执行go get 或者go build，还是对一个已经使用go modules的项目直接执行 go get 或者go build。&lt;/p&gt;

&lt;p&gt;如果遇到这类问题，解决方法非常简单，升级一下git 版本到比较新的版本即可。这里说起来很轻描淡写，但是实际排查过程却是很让人恼火，因为整个go cmd的代码实在是太乱了，代码质量不敢恭维，阅读体验很差。那么问题在什么地方呢，在于在确定版本依赖关系的过程中，go cmd代码里调用了一些git指令，而这些指令在较老版本的git中还没有支持。这是一个多么正常的使用场景，可是golang从1.11到现在已经发布的1.11.2，均没有解决这个报错信息与真实原因风马牛不相及的问题。&lt;/p&gt;

&lt;p&gt;一个系统的构建对其他某些组件的版本有依赖，这在软件工程中是一个再常见不过的事情。最简单的处理方式是，要么在文档中写明依赖的版本信息，要么在构建过程中，如果发现某些组件版本太低，就抛出相关信息，然后退出。无论怎么做，都是为了达到一个目的：告诉使用者发生了什么事情，该怎么做。而go 1.11到go 1.11.2里是怎么做的呢，发现git 的一些指令执行失败了，却并不做好异常处理，一直到另一块代码中不得不失败退出，才丢出一个没有任何参考意义的错误信息。&lt;/p&gt;

&lt;p&gt;也许你会觉得我有点小题大做，毕竟是软件就会有bug。但真正让我恼火的是，一些golang的开发者居然保有这样的想法：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;反正开发者们一般是在ubuntu上面开发，上面的git 版本一般足够新了，编译完之后把二进制再部署到centos等老的系统上去就行了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这话当然不是我杜撰的，具体见: &lt;a href=&#34;https://github.com/golang/go/issues/26746&#34;&gt;https://github.com/golang/go/issues/26746&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;连我这种软件行业的凡夫俗子，都知道遇到异常的合理处理方式是什么（例如我在2013年写的一篇文章：&lt;a href=&#34;http://pureage.info/2013/07/13/117.html&#34;&gt;再不判断异常分支就剁手&lt;/a&gt;），google 里绝对意义上的高手竟然对此毫不在意，实在让人大跌眼镜。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>openstack swift中的composite ring</title>
      <link>https://pureage.info/post/composite-ring-of-swift/</link>
      <pubDate>Tue, 23 Oct 2018 15:39:41 +0800</pubDate>
      
      <guid>https://pureage.info/post/composite-ring-of-swift/</guid>
      
        <description>&lt;p&gt;openstack swift 在很早之前就有了 global clusters 的概念，给每一块磁盘赋予一个 region 的属性，在跨地域分布的集群里进行对象读写操作时，前端 proxy server  可以选择地缘近的后端存储服务来通信，进而达到低延迟和高吞吐的目的。具体配置见：&lt;a href=&#34;https://docs.openstack.org/swift/latest/overview_global_cluster.html&#34;&gt;Global Clusters&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;这个功能乍看很实用，但是实际上很鸡肋，因为 swift 内部 ring 构建算法并不能保证各副本会均匀的分布在各 region 中。例如，如果你想通过两个 region 实现真正的跨机房备份的话是不行的，因为一个对象的所有副本可能都会在某一个机房的设备上，而另一个机房里一份副本都没有。如果连基本的均衡都做不到，之前的 global clusters 其实并无多大实际意义。&lt;/p&gt;

&lt;p&gt;在最新的 swift 2.19.0 版本里，通过一个叫做组合环（compsite ring）的概念，这个情况才得以改善。它的实现方式如下。&lt;/p&gt;

&lt;p&gt;一个组合环是由两个或多个普通环组合而成，组合后的环，其副本冗余数量是这些普通环的冗余数量之和。各个普通环是在不同的 region 使用不同的设备独立构建的。&lt;/p&gt;

&lt;p&gt;例如，假设想实现一个在A，B两地机房的三份冗余的存储，而且A机房作为主机房希望每个对象都在其上冗余两份，B机房作为次机房则只冗余一份。那么就在分别构建针对 A 和 B 的两个哈希环 RingA 和 RingB, RingA 在创建时指定其冗余份数为2，RingB 在创建时指定其冗余份数为1。在各自添加完设备并生成 ring 文件后，使用 swift 2.19.0 里新增的一个工具 swift-ring-composer，来将 RingA 和 RingB 组合成一个新的环，然后将这个新的环作为最终的环分发到各设备中去使用。&lt;/p&gt;

&lt;p&gt;文档里称 swift-ring-composer 是个实验性质的工具，未来可能会修改或被删除，大家酌情使用。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>王小波和狄德罗</title>
      <link>https://pureage.info/post/wangxiaobo-and-diderot/</link>
      <pubDate>Sat, 20 Oct 2018 00:13:41 +0800</pubDate>
      
      <guid>https://pureage.info/post/wangxiaobo-and-diderot/</guid>
      
        <description>&lt;p&gt;在《似水流年》里，王二曾经很想把肚子划破，掏出肠子挂到敌人脖子上去。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;在和平年月里，生活只是挖坑种粮的竞争。虽然生的人高马大，我却比不过别人。这是因为：第一，我不是从小干惯了这种活计；第二，我有腰疼病，干农活没有腰不成。所以我盼望另一种竞争。在战场上，我的英勇会超过一切人。假如做了俘虏，我会偷偷捡块玻璃，把肚子划破，掏出肠子挂到敌人脖子上去。像我这样的兵员一定大为有用。但是不发生战争，我就像刘老先生一样没用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在经历了一系列的变故后，他逐渐放弃了这个想法。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我说过，在似水流年里，有一些事叫我日夜不安。就是这些事：贺先生死了，死时直挺挺；刘老先生死了，死前想吃一只鸭；我在美国时，我爸爸也死了，死在了书桌上，当时他在写一封信，要和我讨论相对论。虽然死法各异，但每个人身上都有足以让他们再活下去的能量。我真希望他们得到延长生命的机会，继续活下去。我自己再也不想掏出肠子挂在别人脖子上。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这个“掏出肠子挂在敌人脖子上”的描述，在若干年前第一次看《似水流年》时就给我留下了极为深刻的印象。我想王小波也更是受到什么东西的影响，才会写出这样的文字来。&lt;/p&gt;

&lt;p&gt;我认为，这个影响来自狄德罗。&lt;/p&gt;

&lt;p&gt;狄德罗何许人也？来一段维基上对他的描述。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;德尼·狄德罗（法语：Denis Diderot，1713年10月5日－1784年7月31日）是法国启蒙思想家、唯物主义哲学家、无神论者和作家，百科全书派的代表。他的最大成就是主编《百科全书，或科学、艺术和工艺详解词典》（通常称为《百科全书》）（1751年—1772年）。此书概括了18世纪启蒙运动的精神。恩格斯称赞他是“为了对真理和正义的热诚而献出了整个生命”的人。他也被视为是现代百科全书的奠基人。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;粗俗的说，这是一个猛人。他甚至在临终前说过：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我死后，随便人们把我葬在哪里都行，但是我要宣布我既不相信圣父，也不相信圣灵，也不相信圣族的其他任何人。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;狄德罗在王小波的书里，也出现过几次。&lt;/p&gt;

&lt;p&gt;比如，《未来世界》：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;报纸关心这些事的原因是：作者出了问题，报纸也会被停刊、罚款。所以我舅舅的传记又开始连载时不叫人物传记，而叫哲理小说了。读者反应还不坏，有人投书报社说，狄德罗写过《拉摩的侄子》，现在我们有了《我的舅舅》，实在好得很。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;再比如，《革命时期的爱情》：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;过去狄德罗得了中耳炎，就用胡思乱想的办法止疼。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这说明王小波对狄德罗是非常熟悉的，而狄德罗还说过一句话（现在考证这句话很可能并不是狄德罗说的，系后人误传）：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;对上帝的信仰是与对独裁的屈服紧密相连的，它们风雨同舟、荣辱与共；只有当最后一个国王被人用最后一个神父的肠子绞死时，人们才能获得自由。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这就把两个人联系起来了。以王小波对法国启蒙思想家的了解程度，我可以单方面宣布他关于“掏出肠子挂到敌人脖子上”的最初意识，是来自狄德罗的。当然这只是我的一点小趣味而已，小波即使在世，当也不会与我辩驳。&lt;/p&gt;

&lt;p&gt;(本文完)&lt;/p&gt;

&lt;p&gt;附：&lt;/p&gt;

&lt;p&gt;生活在18世纪的狄德罗还发现了一个后来被以他的名字命名的效应。&lt;/p&gt;

&lt;p&gt;狄德罗效应是一种常见的“愈得愈不足效应”，在没有得到某种东西时，心里很平稳，而一旦得到了，却不满足。&lt;/p&gt;

&lt;p&gt;有一天，朋友送给他一件质地精良、做工考究的睡袍，狄德罗非常喜欢。可他穿着华贵的睡袍在书房走来走去时，总觉得家具不是破旧不堪，就是风格不对，地毯的针脚也粗得吓人。于是，为了与睡袍配套，旧的东西先后更新，书房终于跟上了睡袍的档次，可他却觉得很不舒服，因为“自己居然被一件睡袍胁迫了”，就把这种感觉写成一篇文章叫《与旧睡袍别离之后的烦恼》。&lt;/p&gt;

&lt;p&gt;200年后，美国哈佛大学经济学家朱丽叶·施罗尔在《过度消费的美国人》一书中，提出了一个新概念——“狄德罗效应”，或“配套效应”，专指人们在拥有了一件新的物品后，不断配置与其相适应的物品，以达到心理上平衡的现象。&lt;/p&gt;

&lt;p&gt;是不是很有趣？&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>取名记</title>
      <link>https://pureage.info/post/the-name-given-to-my-baby/</link>
      <pubDate>Tue, 04 Sep 2018 18:15:20 +0800</pubDate>
      
      <guid>https://pureage.info/post/the-name-given-to-my-baby/</guid>
      
        <description>&lt;p&gt;2017年底，我的生活有了一个很大的变化，妻子怀孕了。怀孕这个事情本身是在我们计划之中，所以只有喜没有惊，算是顺利如意。&lt;/p&gt;

&lt;p&gt;我和妻子两人对生育小孩这个事情一直比较重视，为小朋友的到来提前做了很多准备。比如提前整整一年一起在一家拳馆练习拳击，事后证明，这个决定是非常正确的。另外一件比较重要的事情就是给小朋友取名字了。&lt;/p&gt;

&lt;p&gt;其实在几年前，我就已经开始把取名这个事情放在心里了，源自于对身边很多亲戚朋友给小孩取名无意义化、趋同化的震惊。大数据统计显示，“轩”、“梓”、“子”、“涵”等字处于白热化的扎堆状态，我对此很难理解。&lt;/p&gt;

&lt;p&gt;先定下原则，我觉得一个好名字必须满足如下几个要求：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;简单很重要。&lt;/li&gt;
&lt;li&gt;读起来顺口，且尽量无不好的谐音。&lt;/li&gt;
&lt;li&gt;有实际意义且寄托美好的愿望。&lt;/li&gt;
&lt;li&gt;较强的独特性。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;确定原则只是完成了第一步工作，俗话说巧妇难为无米之炊，第二步，输入材料要够。于是，这一两年里，诗经、楚辞、唐诗、宋词以及几部古典名著都成了我在上下班地铁公交途中的读物，这个步骤可以称为广撒网。&lt;/p&gt;

&lt;p&gt;经过上面广撒网式的收集，我手里已经有十几个备选的名字了。下一步就是从中在做精挑细选。在这个过程中，发现一个问题，有些名字最初遇到的时候非常心动，但几个月、一年之后又会发现没有那么好，而有些名字，第一眼没那么惊艳，时间长了反而觉得更有韵味。这更证实了我的看法，匆忙之下是很难取好一个名字的。&lt;/p&gt;

&lt;p&gt;长话短说，经过两年多的沉淀，最终锁定了一个名字：方云开。关于这个名字，有几点可以说说。&lt;/p&gt;

&lt;p&gt;首先,从文字本身上来说,这两个字足够简单。&lt;/p&gt;

&lt;p&gt;关于出处，有至今出处已不可考的诗句“守得云开见月明”(网上大多说这句出自水浒传，但我通读水浒很多遍，并未找到)，也有“云开见天”，“云开见日”等成语；李隆基有一首诗《平胡》，里面也有“雾扫清玄塞，云开静朔方”的句子；我最喜欢的还是水浒中引用北宋绍尧夫的“纷纷五代乱离间，一旦云开复见天”，在这句诗里居然还看到了李开复的名字。所以从寓意上来看，云开代表的是一种更加光明和美好的前景即将到来的状态。&lt;/p&gt;

&lt;p&gt;从文字本身来说，这两个字又不是简单的堆砌辞藻，够平实和大气。从读音上来看，最后一个开字是第一声，增强了气势。从文字本义上来说，云开二字很有动态的画面感，体现出一种生命力。&lt;/p&gt;

&lt;p&gt;可以看到，在我取名的原则里，是没有考虑五行八字的。倒不是我特别排斥，而是我认为五行八字的东西太深，如果一点都不懂或者只是道听途说懂个一星半点，还不如不参考。也没有太考虑性别，即使是女孩子，也尽量取个中性大气的名字。&lt;/p&gt;

&lt;p&gt;就这样，如无意外，小朋友的名字就是方云开了。然而，事与愿违，最终没有采用这个名字。&lt;/p&gt;

&lt;p&gt;在小朋友出生之后，一位在家族地位很高的长辈咨询了一位“大师”，说按小朋友的八字，名字一定要有火和土的属性。也许是该长辈在企业做领导久了的缘故，经常会在家族事务里把好心的建议变成一种行政式的命令。对此我内心是非常不愉快的，首先从八字上看，我家小朋友的八字比较复杂，是从弱格，不同的大师对此说法可能完全不一样，我怎么确认这位大师说的就一定是对的？其次，难道我历时两年的工作还不如大师随便说的几句话？这事如果是在知乎上，主流意见肯定是不要理会，但在我的个性很难做到如此强硬，在这种抵触又无奈情绪的影响下，取名这件事情我差点陷入破罐子破摔的状态。&lt;/p&gt;

&lt;p&gt;平静下来之后，取名还要继续下去。总不能真给小孩取“耀坤”这种“有火有土”的名字，于心难安啊。&lt;/p&gt;

&lt;p&gt;心态转变之后，又将精力专注于取名本身上来。只是这次进入了hard模式，上述几大原则不能丢，还必须加上五行属性的要求，时间上也有了deadline，必须在给小朋友办出生证明之前最终确定。做了这种妥协之后，我也做了如下的决定：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;名字属性上虽然必须满足火和土，但绝不要在字形里出现明显火和土的偏旁部首。这么做的目的是为了一定程度中和“大师”的不靠谱程度给小孩子带来的影响。&lt;/li&gt;
&lt;li&gt;名字一经确定，就不再征求除妻子之外其他人的意见了。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;我无法详实的记录这阶段取名的详细过程，只能给出之后的结果。最终确定的名字为“方立维”。取自文天祥《正气歌》里“地维赖以立，天柱赖以尊”这一句。古人认为天圆地方，大地靠几根绳子维系。将“维”和“立”在诗句中出现的顺序调换了一下，使其读起来更顺口。要说有什么寓意的话，希望小朋友以后做一个堂堂正正顶天立地的男子汉吧。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>《如何阅读一本书》读书笔记</title>
      <link>https://pureage.info/post/howto-read-a-book/</link>
      <pubDate>Tue, 14 Nov 2017 13:45:01 +0000</pubDate>
      
      <guid>https://pureage.info/post/howto-read-a-book/</guid>
      
        <description>&lt;p&gt;在几位前辈的推荐下，读完了由莫提默·J.艾德勒和查尔斯·范多伦合著的《如何阅读一本书》，受益良多。&lt;/p&gt;

&lt;p&gt;如书名明示的那样，这是一本指导读者如何读书的书。时至今日，阅读的目标可以分为两种，一种是为获得资讯而阅读，另一种是为增进理解而阅读。这本书就是为希望从阅读中增进理解的读者而准备的。&lt;/p&gt;

&lt;p&gt;在阅读一本书之前，我们或多或少对其有一些期许，认为作者有义务努力的把书写好。本书提出作为读者也有自己该履行的义务。书中有一个比喻，在一场阅读的过程中，作者与读者就像是棒球赛场中的一对投手和捕手。写作与阅读的东西就像那只球一样，是被主动、有活力的双方所共有的，由一方开始，另一方终结。&lt;/p&gt;

&lt;p&gt;本文的主要内容概括如下。&lt;/p&gt;

&lt;h1 id=&#34;四个基本问题&#34;&gt;四个基本问题&lt;/h1&gt;

&lt;p&gt;只要是超越基础阅读的阅读层次，阅读的艺术就是要以适当的顺序提出适当的问题。关于一本书，你一定要提出四个主要的问题。&lt;/p&gt;

&lt;p&gt;(1) 整体来说，这本书到底在谈些什么？你一定要想办法找出这本书的主题，作者如何依次发展这个主题，如何逐步从核心主题分解出从属的关键议题来。&lt;/p&gt;

&lt;p&gt;(2) 作者细部说了什么，怎么说的？你一定要想办法找出主要的想法、声明与论点。这些组合成作者想要传达的特殊讯息。&lt;/p&gt;

&lt;p&gt;(3) 这本书说得有道理吗？是全部有道理，还是部分有道理？除非你能回答前两个问题，否则你没法回答这个问题。在你判断这本书是否有道理之前，你必须先了解整本书在说些什么才行。然而，等你了解了一本书，如果你又读得很认真的话，你会觉得有责任为这本书做个自己的判断。光是知道作者的想法是不够的。&lt;/p&gt;

&lt;p&gt;(4) 这本书跟你有什么关系？如果这本书给了你一些资讯，你一定要问问这些资讯有什么意义。为什么这位作者会认为知道这件事很重要？你真的有必要去了解吗？如果这本书不只提供了资讯，还启发了你，就更有必要找出其他相关的、更深的含意或建议，以获得更多的启示。&lt;/p&gt;

&lt;h1 id=&#34;阅读的层次&#34;&gt;阅读的层次&lt;/h1&gt;

&lt;p&gt;阅读分为四个层次，分别是基础阅读、检视阅读、分析阅读和主题阅读。这些层次的关系是渐进的，较低的层次会包含在较高的层次中。&lt;/p&gt;

&lt;h2 id=&#34;基础阅读&#34;&gt;基础阅读&lt;/h2&gt;

&lt;p&gt;在熟练这个层次的过程中，一个人可以学习到阅读的基本艺术，接受基础的阅读训练，获得初步的阅读技巧。我们之所以喜欢“基础阅读”这个名称，是因为这个阅读层次的学习通常是在小学时完成的。这个层次所解决的问题是：“这个句子在说什么？”&lt;/p&gt;

&lt;h2 id=&#34;检视阅读&#34;&gt;检视阅读&lt;/h2&gt;

&lt;p&gt;在这个层次上，我们的目标是从表面上去观察这本书，学习到光是书的表象所教给我们的一切。这个层次的典型问题是：“这本书在谈什么？”，“这本书的架构如何？”，“这本书包含了哪些部分？”。&lt;/p&gt;

&lt;p&gt;检视阅读包含有两个步骤，有经验的阅读者可以同时运用这两个步骤，对于刚起步的阅读者来说，最好是将两者区别为不同的步骤与活动。&lt;/p&gt;

&lt;h3 id=&#34;检视阅读一-有系统的略读或粗度&#34;&gt;检视阅读一：有系统的略读或粗度&lt;/h3&gt;

&lt;p&gt;（1）先看书名页，然后如果有序就先看序。要很快地看过去。特别注意副标题，或其他的相关说明或宗旨，或是作者写作本书的特殊角度。在完成这个步骤之前，你对这本书的主题已经有概念了。如果你愿意，你会暂停一下，在你脑海中将这本书归类为某个特定的类型。而在那个类型中，已经包含了哪些书。&lt;/p&gt;

&lt;p&gt;（2）研究目录页，对这本书的基本架构做概括性的理解。&lt;/p&gt;

&lt;p&gt;（3）如果书中附有索引，也要检阅一下——大多数论说类的书籍都会有索引。快速评估一下这本书涵盖了哪些议题的范围，以及所提到的书籍种类与作者等等。&lt;/p&gt;

&lt;p&gt;（4）如果那是本包着书衣的新书，不妨读一下出版者的介绍。&lt;/p&gt;

&lt;p&gt;（5）从你对一本书的目录很概略，甚至有点模糊的印象当中，开始挑几个看来跟主题息息相关的篇章来看。&lt;/p&gt;

&lt;p&gt;（6）最后一步，把书打开来，东翻翻西翻翻，念个一两段，有时候连续读几页，但不要太多。就用这样的方法把全书翻过一遍，随时寻找主要论点的讯号，留意主题的基本脉动。最重要的是，不要忽略最后的两三页。&lt;/p&gt;

&lt;h3 id=&#34;检视阅读二-粗浅的阅读&#34;&gt;检视阅读二：粗浅的阅读&lt;/h3&gt;

&lt;p&gt;从头到尾先读完一遍，碰到不懂的地方不要停下来查询或思索。在第一次阅读一本难读的书时，不要企图了解每一个字句，这是最最重要的一个规则。&lt;/p&gt;

&lt;h2 id=&#34;分析阅读&#34;&gt;分析阅读&lt;/h2&gt;

&lt;p&gt;分析阅读是这本书中话费笔墨最多的部分，可以分为三个阶段，每个阶段又由若干规则组成。&lt;/p&gt;

&lt;h3 id=&#34;分析阅读的第一个阶段&#34;&gt;分析阅读的第一个阶段&lt;/h3&gt;

&lt;p&gt;分析阅读的第一阶段：找出一本书在谈些什么的规则。包含以下若干规则：&lt;/p&gt;

&lt;p&gt;(1) 依照书的种类与主题来分类。&lt;/p&gt;

&lt;p&gt;(2) 使用最简短的文字说明整本书在谈些什么。&lt;/p&gt;

&lt;p&gt;(3) 将主要部分按顺序与关联性列举出来。将全书的大纲列举出来，并将各个部分的大纲也列出来。&lt;/p&gt;

&lt;p&gt;(4) 确定作者想要解决的问题。&lt;/p&gt;

&lt;h3 id=&#34;分析阅读的第二个阶段&#34;&gt;分析阅读的第二个阶段&lt;/h3&gt;

&lt;p&gt;分析阅读的第二阶段：诠释一本书的内容规则。包含以下若干规则：&lt;/p&gt;

&lt;p&gt;(5) 诠释作者的关键字，与他达成共识。&lt;/p&gt;

&lt;p&gt;(6) 由最重要的句子中，抓住作者的重要主旨。&lt;/p&gt;

&lt;p&gt;(7) 知道作者的论述是什么，从内容中找出相关的句子，再重新架构出来。&lt;/p&gt;

&lt;p&gt;(8) 确定作者已经解决了哪些问题，还有哪些是没解决的。再判断哪些是作者知道他没解决的问题。&lt;/p&gt;

&lt;h3 id=&#34;分析阅读的第三个阶段&#34;&gt;分析阅读的第三个阶段&lt;/h3&gt;

&lt;p&gt;分析阅读的第三阶段：像是沟通知识一样地评论一本书的规则&lt;/p&gt;

&lt;p&gt;A．智慧礼节的一般规则&lt;/p&gt;

&lt;p&gt;(9) 除非你已经完成大纲架构，也能诠释整本书了，否则不要轻易批评。（在你说出：“我读懂了!”之前，不要说你同意、不同意或暂缓评论。）&lt;/p&gt;

&lt;p&gt;(10) 不要争强好胜，非辩到底不可。&lt;/p&gt;

&lt;p&gt;(11) 在说出评论之前，你要能证明自己区别得出真正的知识与个人观点的不同。&lt;/p&gt;

&lt;p&gt;B. 批评观点的特别标准&lt;/p&gt;

&lt;p&gt;(12) 证明作者的知识不足。&lt;/p&gt;

&lt;p&gt;(13) 证明作者的知识错误。&lt;/p&gt;

&lt;p&gt;(14) 证明作者不合逻辑。&lt;/p&gt;

&lt;p&gt;(15) 证明作者的分析与理由是不完整的。&lt;/p&gt;

&lt;p&gt;注意：关于最后这四点，前三点是表示不同意见的准则，如果你无法提出相关的佐证，就必须同意作者的说法，或至少一部分说法。你只能因为最后一点理由，对这本书暂缓评论。&lt;/p&gt;

&lt;h2 id=&#34;主题阅读&#34;&gt;主题阅读&lt;/h2&gt;

&lt;p&gt;这是所有阅读中最复杂也最系统化的阅读。在做主题阅读时，阅读者会读很多书，而不是一本书，并列举出这些书之间相关之处，提出一个所有的书都谈到的主题。但只是书本字里行间的比较还不够。主题阅读涉及的远不止此。借助他所阅读的书籍，主题阅读者要能够架构出一个可能在哪一本书里都没提过的主题分析。因此，很显然的，主题阅读是最主动、也最花力气的一种阅读。&lt;/p&gt;

&lt;h3 id=&#34;主题阅读的步骤&#34;&gt;主题阅读的步骤&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;找到书中与主题相关的章节&lt;/li&gt;
&lt;li&gt;带引作者与你达成共识&lt;/li&gt;
&lt;li&gt;厘清问题&lt;/li&gt;
&lt;li&gt;界定议题&lt;/li&gt;
&lt;li&gt;分析讨论&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;其他&#34;&gt;其他&lt;/h1&gt;

&lt;p&gt;上面所述的各种规则，是针对一般性的论述类型的书籍而言的通用规则。某些具体类型的书籍有一些特殊的要求。作者也针对这些类型的书列出了不同的阅读规则。&lt;/p&gt;

&lt;p&gt;主要包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如何阅读实用型的书&lt;/li&gt;
&lt;li&gt;如何阅读想象文学&lt;/li&gt;
&lt;li&gt;阅读故事、戏剧与诗的一些建议&lt;/li&gt;
&lt;li&gt;如何阅读历史书&lt;/li&gt;
&lt;li&gt;如何阅读科学与数学&lt;/li&gt;
&lt;li&gt;如何阅读哲学书&lt;/li&gt;
&lt;li&gt;如何阅读社会科学&lt;/li&gt;
&lt;/ul&gt;</description>
      
    </item>
    
    <item>
      <title>过时的技术</title>
      <link>https://pureage.info/post/obsolescent-technology/</link>
      <pubDate>Tue, 10 Oct 2017 15:01:38 +0000</pubDate>
      
      <guid>https://pureage.info/post/obsolescent-technology/</guid>
      
        <description>&lt;p&gt;互联网技术的世界很奇怪。&lt;/p&gt;

&lt;p&gt;大部分时候我们都会听到各种关于技术更新换代太快的说法，仿佛昨天大家都还在用这个流行的物件（技术、框架、架构等）呢，今天就一窝蜂的追赶上另一个更新更时髦的了。&lt;/p&gt;

&lt;p&gt;但有时候又会情不自禁的感慨，有些过时的东西，淘汰的也太慢了。&lt;/p&gt;

&lt;p&gt;这些东西，你明知道它们早晚要被淘汰，但你就是不知道它们到底会撑到什么时候。&lt;/p&gt;

&lt;p&gt;举个例子，mp4点播服务的伪流化(pseudo-streaming)功能。&lt;/p&gt;

&lt;p&gt;这个功能是干什么的呢，简单描述一下，就是提供了对在线mp4点播服务的拖拽功能，或者称为seek。&lt;/p&gt;

&lt;p&gt;在HTML5流行之前，web上的视频播放，是Adobe Flash的天下。这个时候，mp4点播服务的伪流化大概是这样的：Flash播放器会将一次拖拽操作，变成一个带着start、end参数的请求发给服务端，服务端根据传入的start、end参数和原始mp4文件的moov数据，生成一个新的mp4封装发给播放器。除了mp4，其他封装的视频格式比如flv，大概也是如此。&lt;/p&gt;

&lt;p&gt;互联网上的视频点播服务诞生了多久，这种技术就用了多久。掐指一算，十几年是有的了。&lt;/p&gt;

&lt;p&gt;根据上面的描述，可以看到，伪流化功能主要是在服务端实现的，比如Nginx的ngx_http_mp4_module模块。非官方的还有一个nginx_mod_h264_streaming模块，使用Nginx提供mp4服务的，八九不离十就是在这两个模块上面改。其他web server，比如lighttpd，也是类似。&lt;/p&gt;

&lt;p&gt;我们可以并且应该思考一下，这个功能如果放在播放器上来做会怎样呢？这个功能只需要客户端能拿到原始moov和根据计算之后的偏移量指定的数据即可。你一定想到了，http range不就是干这个的吗？&lt;/p&gt;

&lt;p&gt;事实却是如此，一些客户端播放器，比如VLC，正是这么实现拖拽的。&lt;/p&gt;

&lt;p&gt;但是在web上，就没这么简单了，因为这个领域事实上的标准是Adobe Flash Player。所以流行的web server不管愿意不愿意，都要去兼容Flash Player的行为，在服务端实现伪流化。&lt;/p&gt;

&lt;p&gt;随着html5开始流行，事情才开始不一样了。mp4的播放和伪流化，变成了一个浏览器内置的功能。不难想象，伪流化这一部分，仍是基于http range。这种场景下，服务器上的原始视频文件只要提供静态文件服务并且支持range请求就行了。&lt;/p&gt;

&lt;p&gt;多美好的事情。况且现在连flv都有flv.js这种在浏览器上不依赖Adobe Flash Player的开源方案了。&lt;/p&gt;

&lt;p&gt;但是如果恰好是一个CDN服务商，你会发现，在点播服务上等到html5普及，还不知道要等到猴年马月呢。&lt;/p&gt;

&lt;p&gt;可能你会问了，用Adobe Flash Player播放器的，就沿用以前的方案不就OK了吗，没什么好纠结的啊？问题在于其他领域的技术都在不断更新，而独这一块维持不变的话，就会引入一些额外的不必要的工作。&lt;/p&gt;

&lt;p&gt;比如说缓存服务。不管你用的是哪种cache server(squid、ats等)，要实现一遍cache中的mp4伪流化吧？&lt;/p&gt;

&lt;p&gt;而现在分片缓存流行了（譬如nginx的slice module)，又要让你的cache server中的mp4伪流化支持分片缓存的场景吧？&lt;/p&gt;

&lt;p&gt;我个人也是在一年多以前就实现了这个功能，当时nginx的slice分片模块还没出来多久。现在看来这个功能应该是CDN服务的标配了。&lt;/p&gt;

&lt;p&gt;但这确实是个必然要被淘汰的东西啊。想到这里，还真令人惆怅。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>About</title>
      <link>https://pureage.info/about/</link>
      <pubDate>Sun, 17 Sep 2017 11:11:29 +0000</pubDate>
      
      <guid>https://pureage.info/about/</guid>
      
        <description>

&lt;h1 id=&#34;strider的由来&#34;&gt;strider的由来&lt;/h1&gt;

&lt;p&gt;《指环王》里Aragorn的外号叫作strider。《指环王》是我最喜爱的电影之一，事实上我是在看书后才看的电影。因为高中时并没有多少条件去及时接触这类欧美电影，只能在校园书店里买了一本第三部的译注。现在依然记得在一个周六的下午窝在宿舍床上看《亡者之道》这一章时的紧张不安。看完后还先入为主的认为任何人都不可能拍出原著的精髓，结果在看完电影后，大为折服，仿佛彼得杰克逊圆了我多年的一个梦。无论是原著，还是电影中，Aragorn都占了很大篇幅，他勇敢、忠诚，&lt;strong&gt;最难能可贵的是能承认、直面自己的软弱。&lt;/strong&gt;在原著中，strider一词的第一次亮相是在如下段落:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‘Him?’ said the landlord in an answering whisper, cocking an eye without turning his head. ‘I don’t rightly know. He is one of the wandering folk&amp;ndash;Rangers we call them. He seldom talks: not but what he can tell a rare tale when he has the mind. He disappears for a month, or a year, and then he pops up again. He was in and out pretty often last spring; but I haven’t seen him about lately. What his right name is I’ve never heard: but he’s known round here as &lt;strong&gt;Strider&lt;/strong&gt;. Goes about at a great pace on his long shanks; though he don’t tell nobody what cause he has to hurry. But there’s no accounting for East and West, as we say in Bree, meaning the Rangers and the Shire-folk, begging your pardon. Funny you should ask about him.’ But at that moment Mr. Butterbur was called away by a demand for more ale and his last remark remained unexplained.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;博客标题-纯真年代的由来&#34;&gt;博客标题:纯真年代的由来&lt;/h1&gt;

&lt;p&gt;取自伊迪丝·华顿(Edith Wharton, 1862-1937)的经典著作The Age of Innocence，但与该书主旨无关。域名 pureage.info 的含义是pure+age.&lt;/p&gt;

&lt;h1 id=&#34;关于留言&#34;&gt;关于留言&lt;/h1&gt;

&lt;p&gt;经过细细斟酌，觉得现在个人博客上的留言功能已经不重要了。而且在本博客数次迁移过程中，也丢失了很多朋友的留言，这样也是对读者的不尊重，索性关闭了留言功能.&lt;/p&gt;

&lt;p&gt;当然交流是有意义的，如果您需要对本站某篇文章提出探讨或意见，欢迎给我发邮件，这些留言会被更新到文章本身中去固化下来，某种程度来说，这是对留言更加尊重的一个选择.&lt;/p&gt;

&lt;p&gt;如果您仅仅只是想和我做个朋友，也热情欢迎邮件联系, 萍水相逢皆是缘.&lt;/p&gt;

&lt;p&gt;邮件地址: embedlinux@163.com&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>梁山一百单八将为何第一个出场的是他</title>
      <link>https://pureage.info/2017/05/29/shijin.html</link>
      <pubDate>Mon, 29 May 2017 03:46:00 +0000</pubDate>
      
      <guid>https://pureage.info/2017/05/29/shijin.html</guid>
      
        <description>&lt;p&gt;我们都知道,《水浒传》中有一百零八员好汉聚义于梁山泊，从文学创作的角度来说，这么多性格各异的人物要讲清楚是一件难度非常大的事情,而施耐庵很好的完成了这个任务。如同程序里指针的使用一样，通过一人一事，引出另一人一事，逐渐将所有的人物串联起来，这种写作技巧其实是很高超的。&lt;/p&gt;

&lt;p&gt;近些年火热的魔幻史诗小说《冰与火之歌》，让POV这种写作手法被粉丝们津津乐道，其实跟《水浒传》采用的技巧很类似，并无多大新意。&lt;/p&gt;

&lt;p&gt;那么在这众多人物的出场中，第一个出场的人就很重要了。这被很多人忽略，但值得一品。&lt;/p&gt;

&lt;p&gt;众所周知，《水浒传》中第一个出场的好汉是九纹龙史进。客观的说，他在众好汉中其实不算特别突出，甚至会给人一种安排他出场就是为了引出鲁智深的感觉。&lt;/p&gt;

&lt;p&gt;如此说来，跟前面我提出来的“第一个出场的人就很重要了”的观点不吻合，我想也有很多人从一开始就没同意这个观点，因为反正要安排这一百零八个人登场，无论如何总得有第一个吧？不是你九纹龙史进，就有可能是我豹子头林冲，是他鼓上蚤时迁。谁先谁后真的有那么重要吗？&lt;/p&gt;

&lt;p&gt;下面我想从两个方面讲讲我对于为什么安排史进第一个出场这个问题的理解。&lt;/p&gt;

&lt;p&gt;第一个方面，是引导读者的道德判断倾向，奠定全文的基准氛围。&lt;/p&gt;

&lt;p&gt;水浒的故事，我们从小就耳濡目染，但我猜测大部分人和我一样，在初步了解的时候，会对梁山好汉们的道德评价取正面态度，毕竟聚义厅前挂着替天行道的杏黄大旗。在这一阶段，我们对它的理解是偏向侠义小说这一边的。&lt;/p&gt;

&lt;p&gt;而随着年龄和阅历的增长，我们再看时，可能会发出这样的感慨:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;这哪里是什么替天行道，这简直是一群杀人魔王在为害人间。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;也有可能这样感慨：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;这哪里是什么侠义小说，分明是一部黑帮小说，充斥着权力和欲望的斗争。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;当然也有可能客观的从小说所处的时代背景出发，理性的评价水浒传中的一系列故事和人物。但总会和我们第一次阅读时的感受有很大的差别。&lt;/p&gt;

&lt;p&gt;而这，就和率先出场的史进有着莫大的关系。&lt;/p&gt;

&lt;p&gt;让我们再来回忆一下故事情节。泼皮高俅在发迹后的第一件事情就是整人，禁军教头王进命悬一线只得带着老母亲出逃。逃跑之路是很艰辛的，如书上所说，“自离了东京，免不得饥餐渴饮，夜住晓行，在路上一月有余”。而不巧，这一天晚上又错过了宿头，前不着村后不着店，这可如何是好？正一筹莫展，“只见远远地林子里闪出一道灯光来”。这道光的源头，正是史家庄。&lt;/p&gt;

&lt;p&gt;这时我们不难揣测王进母子二人的心思。一是喜，黑山野岭的总算找到一个有人的地了；二是忧，担心这庄户的主人不一定乐意收留。于是两人抱着试试看的心态，“遮莫去那里陪个小心，借宿一宵，明日早行”。只要能住上一晚，就是大幸了。&lt;/p&gt;

&lt;p&gt;谁想主人家史太公不仅收留他们过夜，言谈举止还极其友善。“客人休拜，你们是行路的人，辛苦风霜，且坐一坐”。不仅友善，还给予他们额外的关切，听到王进母亲晚上发出病痛之声，主动嘘寒问暖，还给安排拿药治病，并留他们在庄上养病。&lt;/p&gt;

&lt;p&gt;这种对待陌生人的温馨场景，可以说在《水浒传》全书中都是绝无仅有的。&lt;/p&gt;

&lt;p&gt;后来，王进在史家庄逗留了半年多，将史进这个只会耍花枪的小青年调教成一条能行走江湖的真正意义上的好汉。《水浒传》可不会像金庸小说那样重点讲主人公的成长历程，史进的这番成长，在全书中同样也是绝无仅有的。这当然会给读者带来一定的亲切感。而史进接下来的一些列所作所为，又在向读者传递，这是一个极其重义的人。&lt;/p&gt;

&lt;p&gt;而史太公的善良，史进的亲切和义气，会让读者误以为这就是全书的基调，当然会在潜意识里影响读者的道德判断。&lt;/p&gt;

&lt;p&gt;第二个方面，史进的出场，暗示着梁山聚义到头一场空的宿命。&lt;/p&gt;

&lt;p&gt;读罢水浒全书，一百零八好汉最后七零八落，其结局让人感叹。感叹里包含了对天罡地煞们宿命的悲悯，对梁山聚义意义的追问。&lt;/p&gt;

&lt;p&gt;其实很可能，在一开始，施耐庵就在暗示着这到头来一场空的宿命。&lt;/p&gt;

&lt;p&gt;我们知道梁山上有很多人是被逼上梁山的。他们上梁山，一步一步不可逆转，最典型的就是林冲了。&lt;/p&gt;

&lt;p&gt;然而史进不是。史进用现在的话说，是个富二代，在乡里也有些权威，平日里他不去欺负别人，也没人敢欺负到他头上，所以他没有任何理由去落草为寇。但偏偏，他主动走上了这一条不归路。&lt;/p&gt;

&lt;p&gt;这件事情不合理，但发生了，而且一直在发生。&lt;/p&gt;

&lt;p&gt;君不见在《古惑仔》风靡校园的时候，多少小县城的中学生们为了一个义字强行扭转了自己的人生轨迹？等到中年、老年的时候，他们会不会悔恨，会不会思考这一切有何意义？&lt;/p&gt;

&lt;p&gt;史进，就像一个热血青年一样，就这样带着我们一头扎进了《水浒传》的世界里。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>青海湖骑行记</title>
      <link>https://pureage.info/2016/08/28/goto-qinghai-lake.html</link>
      <pubDate>Sun, 28 Aug 2016 03:46:00 +0000</pubDate>
      
      <guid>https://pureage.info/2016/08/28/goto-qinghai-lake.html</guid>
      
        <description>&lt;p&gt;七月底，终于和婷在婚假里完成了“蓄谋”已久的青海湖之行，骑行路上花了五天，其中骑行四天，休息一天，全部行程约360公里，这里简单的记录一下流水账。&lt;/p&gt;

&lt;h3 id=&#34;第一天行程-西海镇-江西沟&#34;&gt;第一天行程：西海镇-&amp;gt;江西沟&lt;/h3&gt;

&lt;p&gt;在前一天下午到达西海镇，并将自行车租好之后，7月24号上午10点半，我们就正式从西海镇出发了。之所以这么晚才出发，是听说青海早晚温差大，早上起来早了会很冷。事后证明，这个出发时间是错误的，还是尽量早一点比较好。&lt;/p&gt;

&lt;p&gt;第一天上午在路上是很兴奋的，到处是Windows经典桌面般的蓝天白云。路上骑车的人，或独自前行，或三五成群。耳边不断响起的，有鸟鸣，有风声，还有骑友们随车携带的小音箱里飘出来的民谣和彼此的加油打气声。&lt;/p&gt;

&lt;p&gt;下午5点多时，到达了离湖不远的三叉口。在此处结识了两位在校大学生，于是结伴而行，目的地同是江西沟。&lt;/p&gt;

&lt;p&gt;六点多，到达二郎剑，此时距离江西沟还有26公里，短暂的休息之后继续。而这，又是一个错误的决定。&lt;/p&gt;

&lt;p&gt;本来青海湖周边应该是9点多才天黑的，这也是我们选择继续前进的原因。然而，随着天色渐暗，忽然就下起大雨来了。此时，我们四人早已又分散成两拨，我和婷在后面。雨中天黑的格外快，气温也骤降，虽然穿上了雨衣，冰冷的雨水仍不断渗到衣服和鞋里。婷渐渐体力不支，我们不得不骑一会就下来休息几分钟。&lt;/p&gt;

&lt;p&gt;很快天就完全黑了，我开始害怕起来，我们没带电灯。路上机动车辆少了许多，此时特别希望车从身后来，因为借着车灯，我们能看清一点路，惧怕对面的来车，因为对面的灯照过来就刺的我们什么都看不见。&lt;/p&gt;

&lt;p&gt;我第一次觉得骑车这么难熬。到江西沟的路是一条长长的上坡路，给自己设置的心理暗示作用的目标一个一个被超过，真正的目的地看上去还遥遥无期。&lt;/p&gt;

&lt;p&gt;身体还在僵持，意识逐渐涣散。忽然一辆车从对面开过来，在我们身后掉头又在前方停了下来。原来，那两位大学生不放心我们，在江西沟找了辆车沿路找过来了。&lt;/p&gt;

&lt;p&gt;其实他们的情况也好不了多少，大雨来临的时候，他们还在我们前方不远，这关头，他们其中一个车胎爆了。在大雨里面补胎困难，好在他们在江西沟有熟悉的客栈老板，于是打电话叫老板开车把他们接过去了。吃了点热饭热菜之后，他们就又原来返回来搜寻我们俩。&lt;/p&gt;

&lt;p&gt;其实这个时候，我们俩距离江西沟已经非常近了。他们在前面带路，我和婷仍旧在车上骑到了江西沟。剩余吃饭补充能量就不表了。&lt;/p&gt;

&lt;h3 id=&#34;第二天行程-江西沟-石乃亥&#34;&gt;第二天行程：江西沟-&amp;gt;石乃亥&lt;/h3&gt;

&lt;p&gt;第二天上午，江西沟的雨一直在下。不想在雨中骑车了，我们四个就借机睡到了中午。等雨停后，下午一点左右，我们才出发。在路上仍然是他们俩一路，而我和婷一路，交替前行。&lt;/p&gt;

&lt;p&gt;下午三点左右到达了黑马河，而天气不是非常理想，所以四人讨论了一番，决定放弃去茶卡盐湖的计划，继续前往石乃亥。&lt;/p&gt;

&lt;p&gt;环湖西路是环湖全程最近接湖边的路段，沿途风景绝美，在穿过一片阵雨之后，我和婷在湖边逗留了一个多小时，拍照、玩水。大海一般的湖，让人不忍离去。&lt;/p&gt;

&lt;p&gt;当一位藏民知道我们的目的是石乃亥时，指了指前方黑压压逐渐聚拢的乌云，说，还有25公里，你们要快点了。我们应该做的正确决定，是就在附近藏民的帐篷里住下，而我们又选择了继续前进。&lt;/p&gt;

&lt;p&gt;此时，天空被分成了色彩分明的两部分，我们的身后艳阳高照，我们的前方，乌云越来越厚。视线所及，一条笔直的公路竟变成了墨绿色，壮美到无法言语。&lt;/p&gt;

&lt;p&gt;我们骑的很快，但雨还是来了，比昨天更大的雨，夹着狂风。&lt;/p&gt;

&lt;p&gt;眼镜早已被雨水模糊了，还不断打到眼睛里，眼睛已经几乎睁不开了。我朝身后的婷喊道，“不要往远处看，就盯着路边眼前的白线！”&lt;/p&gt;

&lt;p&gt;在爬过一个陡峭的山口时，头顶一片巨大的经幡在风雨中猎猎作响。此情此景，我忍不住停了下来，闭上眼睛，感受这充斥四周的巨大声响。这大概就是敬畏吧。&lt;/p&gt;

&lt;p&gt;在下这个山口时，路过一群藏族女孩子，看我们在雨中的狼狈样子，她们笑出了声，大喊加油，这时心里忽然安定了下来。&lt;/p&gt;

&lt;p&gt;最终，大概晚上九点，我们赶到了石乃亥，与另外两位回合。才发现，我们的眼睛都已被雨水打的通红。&lt;/p&gt;

&lt;h3 id=&#34;第三天行程-休息&#34;&gt;第三天行程：休息&lt;/h3&gt;

&lt;p&gt;经过连续两天的暴雨，我和婷商量，第三天就在石乃亥休息一天，恢复一下体力并把衣物等都烘干。而那两位学生决定继续前进，于是我们就在石乃亥别过。目送他们俩离开时，心想这一别不知以后能否再见面了。他们都很年轻，活力四射，祝福他们。&lt;/p&gt;

&lt;h3 id=&#34;第四天行程-石乃亥-刚察&#34;&gt;第四天行程：石乃亥-&amp;gt;刚察&lt;/h3&gt;

&lt;p&gt;第四天早上，我们九点整出发，这一天大概要骑82公里。&lt;/p&gt;

&lt;p&gt;这一天的大部分时候，都骑得非常舒服，天气也非常给力。直到距离刚察还有不到10公里的时候，天气又开始变了。&lt;/p&gt;

&lt;p&gt;天空又被割裂成光明和黑暗两部分，而我们就正在向着黑暗前进，真是明知前有雨，偏向雨中行。&lt;/p&gt;

&lt;p&gt;经过半天的酝酿，老天爷终于爆发了。一股暴风猛然袭来，在我前方不远的婷，竟然直接被连人带车刮翻在地，而我也无法继续保持平衡，只好下车推行。婷尝试再次上车，又被风掀倒，而旁边又不断有大货车路过，非常危险。我们当机立断，就地停了下来，穿上雨衣蹲在公路旁的坡道下，这减缓了大部分的风力。没一会，冰雹就来了，砸在头盔上叮当作响。手机显示，当时气温只有9度。&lt;/p&gt;

&lt;p&gt;我们在路边蹲了差不多一个小时后，冰雹停了，风也小些了。于是上车继续，很快就到了刚察县内。&lt;/p&gt;

&lt;h3 id=&#34;第五天行程-刚察-西海镇&#34;&gt;第五天行程：刚察-&amp;gt;西海镇&lt;/h3&gt;

&lt;p&gt;这一天的行程可以分成一两部分，前一部分就是不断的爬坡，偶尔的下坡之后就有一个更长的上坡在前面等着，爬到让人绝望。&lt;/p&gt;

&lt;p&gt;但是，当下半部分到来时，你就会觉得，前面所有的苦和累都是值得的。一个长达20多公里的大下坡，直接到达西海镇。&lt;/p&gt;

&lt;h3 id=&#34;总结&#34;&gt;总结&lt;/h3&gt;

&lt;p&gt;青海的高原风景非常壮美，不是城市景区的那种秀丽风光能比拟的。但是，如果你对骑行本身不是很感兴趣的话，那也会由于审美疲劳而感到无聊。而如果很喜欢骑行的话，那环青海湖这条路线简直就是天堂了。&lt;/p&gt;

&lt;p&gt;高原天气变化太快，我们这次出行中途遇到好几次意料之外的状况，所以出行前还是尽量做好准备。在出行过程中，尽量早点出发，不至于出现状况时发现自己处于前不着村后不着店的黑夜里。&lt;/p&gt;

&lt;p&gt;最后，曾经骑行作为三大俗被很多人笑话。但是经过环青海湖之后，对于这种言论我只会报以轻蔑的一笑了。连青海湖这么好的路况，短短五天（实际骑行只有四天）的路程，就让我体会到骑行真是对身体和意志的双重考验，而与那些穿行在川藏线、滇藏线、新疆等地的真正骑行爱好者相比，我遇到的这些困难不值一提。&lt;/p&gt;

&lt;p&gt;向他们表示敬意。&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
