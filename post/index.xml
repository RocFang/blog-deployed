<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 纯真年代</title>
    <link>https://pureage.info/post/</link>
    <description>Recent content in Posts on 纯真年代</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 03 Nov 2019 00:01:46 +0800</lastBuildDate>
    
	<atom:link href="https://pureage.info/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>为什么这两个月没更新博客</title>
      <link>https://pureage.info/post/why-this-blog-not-update-so-long/</link>
      <pubDate>Sun, 03 Nov 2019 00:01:46 +0800</pubDate>
      
      <guid>https://pureage.info/post/why-this-blog-not-update-so-long/</guid>
      <description>&lt;p&gt;最近这两个月，我没有在本博客上更新一篇文章。这也不是什么罕见的事情，因为各种借口不愿意写文章在过去也发生过很多次。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>再见，知乎</title>
      <link>https://pureage.info/post/leave-zhihu/</link>
      <pubDate>Fri, 30 Aug 2019 17:36:06 +0800</pubDate>
      
      <guid>https://pureage.info/post/leave-zhihu/</guid>
      <description>&lt;p&gt;印象中大概从2012年就开始玩知乎，这些年在上面花了不少时间，也生产了一些质量不高的内容，但其实很早就开始有离开知乎的想法了，今天做出了实际的行动。&lt;/p&gt;

&lt;p&gt;我不是一个产品经理，对互联网产品也没有深入的研究。如果一定要问我为什么做出这个决定，我想最主要是有两个原因。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rust中struct与其method定义中的范型标识符</title>
      <link>https://pureage.info/post/generic-type-identifier-in-struct-and-method-definition/</link>
      <pubDate>Sat, 24 Aug 2019 11:10:10 +0800</pubDate>
      
      <guid>https://pureage.info/post/generic-type-identifier-in-struct-and-method-definition/</guid>
      <description>&lt;p&gt;Rust中，在struct定义中使用范型的方法，是在struct名称后跟&amp;lt;范型标识符&amp;gt;，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;struct Int&amp;lt;T&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;而在struct的方法的定义中使用范型，则是形如：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-rust&#34;&gt;impl&amp;lt;T&amp;gt; Int&amp;lt;T&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Rust已经让我爱不释手了</title>
      <link>https://pureage.info/post/refine-my-first-rust-project/</link>
      <pubDate>Wed, 21 Aug 2019 21:26:11 +0800</pubDate>
      
      <guid>https://pureage.info/post/refine-my-first-rust-project/</guid>
      <description>&lt;p&gt;在昨天写了自己的第一个rust程序后，今天抽了一点时间把代码结构优化了一下，另外引入了clap这个第三方crate来做参数解析。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用Rust写了一个博客的客户端发布工具</title>
      <link>https://pureage.info/post/test-for-blog-writer-by-rust/</link>
      <pubDate>Tue, 20 Aug 2019 23:25:18 +0800</pubDate>
      
      <guid>https://pureage.info/post/test-for-blog-writer-by-rust/</guid>
      <description>&lt;p&gt;这个事情本身没有什么好说的，算是刚刷完Rust Book之后自己额外写的一个hello world级的程序，只是这个程序对我自己还有点实际用处而已，用来简化了我写博客的一些流程。&lt;/p&gt;

&lt;p&gt;本来这种事情我是最擅长用shell来解决，强迫自己用Rust来写实在很别扭，但是这恐怕是不可避免的阵痛了，希望自己能尽快渡过这个不适期。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在阅读《Rust编程之道》时的一次抬杠经历</title>
      <link>https://pureage.info/post/a-misunderstanding-of-tao-of-rust/</link>
      <pubDate>Fri, 16 Aug 2019 23:59:34 +0800</pubDate>
      
      <guid>https://pureage.info/post/a-misunderstanding-of-tao-of-rust/</guid>
      <description>&lt;p&gt;最近学习Rust,在看完了官网上的Rust Book之后，我买了一本张汉东老师著的《Rust编程之道》，来两本书对照着再看一遍。&lt;/p&gt;

&lt;p&gt;今天要说的，就是发生在阅读《Rust编程之道》时发生的一个我认为很有意思的小事。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>重新打造我的笔记系统</title>
      <link>https://pureage.info/post/rebuild-my-notes/</link>
      <pubDate>Wed, 29 May 2019 13:25:01 +0800</pubDate>
      
      <guid>https://pureage.info/post/rebuild-my-notes/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;笔记系统，不就是个云笔记吗？说的这么高大上。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;从2013年起，我就开始将自己的各种笔记和收集到的零散知识放在有道云笔记上。到现在为止，客观的说，有道云笔记的表现是很让我满意的。网友反映它会丢笔记等种种严重的毛病，我基本都没遇到过，有印象的几次问题表现在同步出了冲突，但并没有导致笔记丢失，而是同一份笔记生成了几份。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>《非暴力沟通》读书笔记</title>
      <link>https://pureage.info/post/nonviolent-communication/</link>
      <pubDate>Thu, 09 May 2019 10:43:17 +0800</pubDate>
      
      <guid>https://pureage.info/post/nonviolent-communication/</guid>
      <description>&lt;p&gt;这几天空闲的时候读完了马歇尔·卢森堡的《非暴力沟通》，觉得它确实是一本好书，在现实生活中指导意义很强。&lt;/p&gt;

&lt;p&gt;如果没有看过这本书，仅看内容简介大概会把它归为“心灵鸡汤”一类的书。但实际上这是一本可以用来指导具体实践的教程，作者不厌其烦甚至有些啰嗦的举了大量的例子来说明非暴力沟通的具体实践。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>混迹技术聊天群容易产生的几个错觉</title>
      <link>https://pureage.info/post/illusions-produced-in-im-groups-of-software-technology/</link>
      <pubDate>Sun, 07 Apr 2019 17:51:22 +0800</pubDate>
      
      <guid>https://pureage.info/post/illusions-produced-in-im-groups-of-software-technology/</guid>
      <description>&lt;p&gt;现如今，各行各业都有无数的聊天群，软件技术相关当然也不例外。一个程序员不混几个技术群，每天在里面聊聊技术吹吹水，都似乎有点非主流了。&lt;/p&gt;

&lt;p&gt;我这里说的是那种技术氛围相对浓厚一点的聊天群，大家主要的聊天内容还是会跟某些具体技术相关。纯水群不在本文讨论范围之列。&lt;/p&gt;

&lt;p&gt;经过我长期观察，混迹技术聊天群容易产生几个错觉，甚至可以称之为幻觉。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>将域名转到Namesilo</title>
      <link>https://pureage.info/post/transfer-domain-from-godaddy-to-namesilo/</link>
      <pubDate>Mon, 25 Mar 2019 10:45:26 +0800</pubDate>
      
      <guid>https://pureage.info/post/transfer-domain-from-godaddy-to-namesilo/</guid>
      <description>&lt;p&gt;本网站所使用的域名pureage.info自2011年注册开始，一直托管在godaddy上。当年国外的域名注册商家中，只有godaddy支持支付宝。我是一个怕麻烦的人，所以虽然这么多年续费费用越来越高，我也一直没有想过将域名转出到其它商家托管。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang中令人不那么愉悦的import</title>
      <link>https://pureage.info/post/annoying-golang-import/</link>
      <pubDate>Mon, 18 Mar 2019 14:49:45 +0800</pubDate>
      
      <guid>https://pureage.info/post/annoying-golang-import/</guid>
      <description>&lt;p&gt;众所周知，在github上参与开源项目的一般流程如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;将开源项目fork到自己的名下。&lt;/li&gt;
&lt;li&gt;在本地开发环境中clone自己在上一步中fork的项目。&lt;/li&gt;
&lt;li&gt;本地完成开发测试和代码提交，再push到自己名下的仓库中。&lt;/li&gt;
&lt;li&gt;从自己名下的这个项目中，对原始项目发起一个pull request。&lt;/li&gt;
&lt;li&gt;发起的pull request被上游merge后，自己的代码就进入开源项目中了。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;虽然具体workflow的细节上可能有些差异，但总体流程大概就是这样。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>徒手攀岩</title>
      <link>https://pureage.info/post/free-solo/</link>
      <pubDate>Tue, 12 Mar 2019 14:09:22 +0800</pubDate>
      
      <guid>https://pureage.info/post/free-solo/</guid>
      <description>&lt;p&gt;从小到大做过不少不少恶梦，一个反复出现的场景是我被困在一面绝壁之上，进退维谷。最后通常有两个结局，一是始终在高压的状态下度过这个梦境，有可能会被吓醒；另一个是突然意识到自己正在做梦，然后抛开一切恐惧，纵身一跃，飞翔于天地间。&lt;/p&gt;

&lt;p&gt;以后我才知道，原来有一项叫徒手攀岩的极限运动，我在那些恶梦中所处的场景，是这项运动的爱好者们的日常。不同的是，这不是梦。一个闪失，他们就会粉身碎骨，成为不断增长的死亡列表里的一个新的名字。&lt;/p&gt;

&lt;p&gt;纪录片《徒手攀岩》，就讲述了Alex Honnold在无保护措施下成功攀登酋长岩的经过。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>洛奇6中的一段台词</title>
      <link>https://pureage.info/post/a-line-in-rocky6/</link>
      <pubDate>Wed, 09 Jan 2019 18:27:11 +0800</pubDate>
      
      <guid>https://pureage.info/post/a-line-in-rocky6/</guid>
      <description>&lt;p&gt;你绝对不会相信，但你以前才这么大，我会把你举高跟你妈说，“他将是世界上最棒的小孩，这孩子绝对超乎想象的优秀”。你长大以后真的很棒，每天看着你就是一种特权了。&lt;/p&gt;

&lt;p&gt;后来你成年就独立了，踏入社会，表现得很好。但不知道什么时候，你变了，不再是原本的你。你让人用手指着你的脸，骂你没用。遇到困难就开始怪罪别人，好像活在阴影下似的。&lt;/p&gt;

&lt;p&gt;跟你说一件你已经知道的事。人生未必都是美好的，世间险恶又无情。不管你有多坚强，你一松懈，就会被逼的屈膝臣服。谁打你，都不会比人生的打击更重。但重点不是你出手多重，而是你能忍耐多少，继续向前迈进。你能承受多少还能向前迈进！这样才能赢啊！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>奎迪：英雄再起</title>
      <link>https://pureage.info/post/creed2/</link>
      <pubDate>Fri, 04 Jan 2019 15:02:29 +0800</pubDate>
      
      <guid>https://pureage.info/post/creed2/</guid>
      <description>&lt;p&gt;作为洛奇系列电影的旁支，《奎迪》系列的第二部最近在国内院线上映了。作为一个拳击题材电影的影迷和现实生活中的拳迷，虽然不久前我已经在网上找到视频资源先睹为快了，在上映后仍去电影院重温了一下。&lt;/p&gt;

&lt;p&gt;总的来说，我对这部电影很满意。与上一部相比，加入了更多拳击之外的感情戏，导致中间会有一些沉闷，应该会引起一些争议。但拳击电影从来都不是从头到尾在擂台上拳拳到肉，如果缺了感情的铺垫，情绪没有累积上来，最后的决战就无法成为高潮。&lt;/p&gt;

&lt;p&gt;说一说这个电影除了主角奎迪的成长之外，有意思的两个地方。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在考研数学中得到148分</title>
      <link>https://pureage.info/post/how-i-got-148-marks-for-math-in-national-entrance-examination-for-postgraduate/</link>
      <pubDate>Wed, 02 Jan 2019 14:24:49 +0800</pubDate>
      
      <guid>https://pureage.info/post/how-i-got-148-marks-for-math-in-national-entrance-examination-for-postgraduate/</guid>
      <description>&lt;p&gt;本来不想取这个标题，因为它第一眼看上去有一种炫耀的情绪在里面。甚至连这篇文章都犹豫了很久要不要写，犹豫的原因无外乎读者可能会有下面几种看法：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;作为一个工作多年的人，还对考研成绩念念不忘，是不是说明考研之后的人生太失败？&lt;/li&gt;
&lt;li&gt;这种文章写出来会不会像现在满大街的鸡汤文一样，都是正确的废话？&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;为什么又决定还是写下这篇文章呢？&lt;/p&gt;

&lt;p&gt;首先是我想写一系列回忆过去的文章，从中思考“我是怎么成为现在的我”这个哲学命题，考研虽然只是一件小事，但仍有值得记住和总结的地方。其次，考研一结束，这个事情就被我抛在脑后，几乎忘掉，近年来各种关于“认知”、“精进”、“学习”的自媒体非常火爆，但是读了这些看上去非常高大上的文章之后，我才发现其实我在考研中其实就用到了很多相关的方法，只是当时并不自知，因此也值得回忆和总结一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用手机发布静态博客</title>
      <link>https://pureage.info/post/write-a-blog-with-a-cellphone/</link>
      <pubDate>Fri, 23 Nov 2018 22:15:21 +0800</pubDate>
      
      <guid>https://pureage.info/post/write-a-blog-with-a-cellphone/</guid>
      <description>&lt;p&gt;这篇文章没有什么实际内容，请谨慎点开，不要浪费自己的时间。我就是想测试一下在手机上写一篇博客的感觉如何，能否达到以前使用动态博客程序时的体验。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>静态博客的黄金搭档:Caddy和Hugo</title>
      <link>https://pureage.info/post/caddy-and-hugo/</link>
      <pubDate>Wed, 21 Nov 2018 01:09:59 +0800</pubDate>
      
      <guid>https://pureage.info/post/caddy-and-hugo/</guid>
      <description>&lt;p&gt;几年前，在以Hexo、jekyll为代表的各种静态博客生成系统百花齐放的时候，我写过一篇&lt;a href=&#34;http://pureage.info/2015/12/16/still-using-typecho.html&#34;&gt;继续留在Typecho&lt;/a&gt;。并不是因为我非常守旧，而是经过实际使用测试之后，我认为不管这些静态生成器宣传的多么天花乱坠，它们实际上就是很难用，体现在安装、发布的各个方面。而它们的那些优点并不能让我忽略这些缺点。&lt;/p&gt;

&lt;p&gt;直到我遇到了Hugo。&lt;/p&gt;

&lt;p&gt;在去年下半年发现了Hugo后，我毫不犹豫的写了个脚本将之前所有的文章全部迁移了过来。仅凭它的无依赖和执行速度，就甩开它的那些前辈们好几个身位。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang modules对git版本的依赖</title>
      <link>https://pureage.info/post/bad-feeling-about-go-cmd/</link>
      <pubDate>Fri, 16 Nov 2018 23:00:44 +0800</pubDate>
      
      <guid>https://pureage.info/post/bad-feeling-about-go-cmd/</guid>
      <description>&lt;p&gt;这些年来，由于golang缺少依赖管理，社区涌现了五花八门的依赖管理方案，比如glide、govendor、godep等。而golang 自1.11起，内置了modules方案，总算是来了个一锤定音。&lt;/p&gt;

&lt;p&gt;go modules方案的设计是非常好的，网上介绍go modules机制的文章很多，我这里也不再赘述。工作中写的一些golang项目，我都已经用上了该方案来做依赖管理。之所以这么快的拥抱新方案，是认为有google的背景，即使是新鲜出炉的功能，稳定性应该是有保证的，即使有坑，趟趟也就过去了。&lt;/p&gt;

&lt;p&gt;但是在这个过程中，发现的一些问题让我对google软件工程质量的信心大打折扣。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openstack swift中的composite ring</title>
      <link>https://pureage.info/post/composite-ring-of-swift/</link>
      <pubDate>Tue, 23 Oct 2018 15:39:41 +0800</pubDate>
      
      <guid>https://pureage.info/post/composite-ring-of-swift/</guid>
      <description>&lt;p&gt;openstack swift 在很早之前就有了 global clusters 的概念，给每一块磁盘赋予一个 region 的属性，在跨地域分布的集群里进行对象读写操作时，前端 proxy server  可以选择地缘近的后端存储服务来通信，进而达到低延迟和高吞吐的目的。具体配置见：&lt;a href=&#34;https://docs.openstack.org/swift/latest/overview_global_cluster.html&#34;&gt;Global Clusters&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>王小波和狄德罗</title>
      <link>https://pureage.info/post/wangxiaobo-and-diderot/</link>
      <pubDate>Sat, 20 Oct 2018 00:13:41 +0800</pubDate>
      
      <guid>https://pureage.info/post/wangxiaobo-and-diderot/</guid>
      <description>&lt;p&gt;在《似水流年》里，王二曾经很想把肚子划破，掏出肠子挂到敌人脖子上去。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;在和平年月里，生活只是挖坑种粮的竞争。虽然生的人高马大，我却比不过别人。这是因为：第一，我不是从小干惯了这种活计；第二，我有腰疼病，干农活没有腰不成。所以我盼望另一种竞争。在战场上，我的英勇会超过一切人。假如做了俘虏，我会偷偷捡块玻璃，把肚子划破，掏出肠子挂到敌人脖子上去。像我这样的兵员一定大为有用。但是不发生战争，我就像刘老先生一样没用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在经历了一系列的变故后，他逐渐放弃了这个想法。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>